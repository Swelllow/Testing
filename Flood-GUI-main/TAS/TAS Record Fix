local LP = game.Players.LocalPlayer
local Map = Workspace.Multiplayer:WaitForChild('Map')
local Spawn = (function() -- this whole function was made by Epix
        local Workspace = game:GetService("Workspace")
        local character = LP.Character
        local characterPosition = character.HumanoidRootPart.Position -- only need to evaluate this once

        -- Get parts that have the character above them

        -- Part that's supposed to represent the character's "feet"
        local dummyPart = Instance.new("Part")
        dummyPart.Size = Vector3.one
        dummyPart.Position = characterPosition - (Vector3.yAxis * 2)
        dummyPart.Anchored = true
        dummyPart.CanCollide = false
        dummyPart.Parent = Workspace

        local overlapParams = OverlapParams.new()
        overlapParams.FilterDescendantsInstances = {dummyPart} -- Only checking if bounding area intersects with "feet"
        overlapParams.FilterType = Enum.RaycastFilterType.Whitelist

        local spawnCandidates = table.create(10)
        for _, item in next, Map:GetDescendants() do
            if not item:IsA("BasePart") or (item.Position - characterPosition).Magnitude > 10 then
                continue
            end

            -- If the part is flipped upside down, that is a problem, thus there is a check here
            local facingUpVector
            if item.CFrame.UpVector:Dot(Vector3.yAxis) >= 0 then facingUpVector = item.CFrame.UpVector else facingUpVector = -item.CFrame.UpVector end
            local candidatesInArea = Workspace:GetPartBoundsInBox(
                item.CFrame + (facingUpVector * (item.Size.Y/2 + 0.25)),
                Vector3.new(item.Size.X, 0.5, item.Size.Z),
                overlapParams
            )
            for _, candidate in next, candidatesInArea do
                if candidate == dummyPart then
                    table.insert(spawnCandidates, item)
                end
            end
        end

        dummyPart:Destroy()

        if #spawnCandidates >= 1 then
            -- Prioritize invisible spawn parts parented to the map
            for _, spawnCandidate in next, spawnCandidates do
                if spawnCandidate.CanCollide and (spawnCandidate.Transparency >= 0.8 or spawnCandidate.Parent == map) then
                    return spawnCandidate
                end
            end
            -- Second pass: only needs to be CanCollide
            for _, spawnCandidate in next, spawnCandidates do
                if spawnCandidate.CanCollide then
                    return spawnCandidate
                end
            end
            -- Fall back to first in list
            return spawnCandidates[1]
        else
            error("Failed to find spawn part!")
        end
end)()

Spawn.CFrame = CFrame.new(Spawn.Position)
Spawn.Name = "Spawn"
